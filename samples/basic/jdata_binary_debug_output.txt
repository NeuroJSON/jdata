%=================================================
%  a simple scalar value 
%=================================================


data2json =

    3.1416


ans =

[D<3.14159>]


%=================================================
%  an empty array 
%=================================================


data2json =

     []


ans =

{UemptyZ}


json2data = 

    empty: []


%=================================================
%  an ampty string 
%=================================================


data2json =

     ''



ans =

{UemptystrSU }


json2data = 

    emptystr: [1x0 char]


%=================================================
%  a simple row vector 
%=================================================


data2json =

     1     2     3


ans =

[$i#U<3><1><2><3>


%=================================================
%  a simple column vector 
%=================================================


data2json =

     1
     2
     3


ans =

[$i#[$U#U<2><3><1><1><2><3>


%=================================================
%  a string array 
%=================================================


data2json =

AC
EG


ans =

[SUACSUEG]


json2data = 

    'AC'    'EG'


%=================================================
%  a string with escape symbols 
%=================================================


data2json =

AB	CD
one"two


ans =

{UstrSUAB	CD
one"two}


json2data = 

    str: 'AB	CD...'


%=================================================
%  a mix-typed cell 
%=================================================


data2json = 

    'a'    [1]    [2x1 double]


ans =

[CaT[$i#[$U#U<2><2><1><2><3>]


%=================================================
%  a 3-D array in nested array form
%=================================================


ans =

[[[i<1>i<9>i<17>i<25>i<33>i<41>][i<3>i<11>i<19>i<27>i<35>i<43>][i<5>i<13>i<21>i<29>i<37>i<45>][i<7>i<15>i<23>i<31>i<39>i<47>]][[i<2>i<10>i<18>i<26>i<34>i<42>][i<4>i<12>i<20>i<28>i<36>i<44>][i<6>i<14>i<22>i<30>i<38>i<46>][i<8>i<16>i<24>i<32>i<40>i<48>]]]


%=================================================
%  a 3-D array in annotated array form
%=================================================


ans =

{U_ArrayType_SUdoubleU_ArraySize_[$U#U<3><2><4><6>U_ArrayData_[$i#U<48><1><9><17><25><33><41><3><11><19><27><35><43><5><13><21><29><37><45><7><15><23><31><39><47><2><10><18><26><34><42><4><12><20><28><36><44><6><14><22><30><38><46><8><16><24><32><40><48>}


%=================================================
%  a 4-D array in annotated array form
%=================================================


ans =

{U_ArrayType_SUdoubleU_ArraySize_[$U#U<4><2><4><3><2>U_ArrayData_[$i#U<48><1><25><9><33><17><41><3><27><11><35><19><43><5><29><13><37><21><45><7><31><15><39><23><47><2><26><10><34><18><42><4><28><12><36><20><44><6><30><14><38><22><46><8><32><16><40><24><48>}


%=================================================
%  a 3-D array in nested array form (JSONLab 1.9)
%=================================================


ans =

[[[i<1>i<2>][i<3>i<4>][i<5>i<6>][i<7>i<8>]][[i<9>i<10>][i<11>i<12>][i<13>i<14>][i<15>i<16>]][[i<17>i<18>][i<19>i<20>][i<21>i<22>][i<23>i<24>]][[i<25>i<26>][i<27>i<28>][i<29>i<30>][i<31>i<32>]][[i<33>i<34>][i<35>i<36>][i<37>i<38>][i<39>i<40>]][[i<41>i<42>][i<43>i<44>][i<45>i<46>][i<47>i<48>]]]


%=================================================
%  a 3-D array in annotated array form (JSONLab 1.9 or earlier)
%=================================================


ans =

{U_ArrayType_SUdoubleU_ArraySize_[$U#U<3><2><4><6>U_ArrayData_[$i#U<48><1><2><3><4><5><6><7><8><9><10><11><12><13><14><15><16><17><18><19><20><21><22><23><24><25><26><27><28><29><30><31><32><33><34><35><36><37><38><39><40><41><42><43><44><45><46><47><48>}


%=================================================
%  a complex number
%=================================================


data2json =

   1.0000 + 2.0000i


ans =

{U_ArrayType_SUdoubleU_ArraySize_[$U#U<2><1><1>U_ArrayIsComplex_TU_ArrayData_[$i#[$U#U<2><2><1><1><2>}


%=================================================
%  a complex matrix
%=================================================


data2json =

  35.0000 +26.0000i   1.0000 +19.0000i   6.0000 +24.0000i
   3.0000 +21.0000i  32.0000 +23.0000i   7.0000 +25.0000i
  31.0000 +22.0000i   9.0000 +27.0000i   2.0000 +20.0000i
   8.0000 +17.0000i  28.0000 +10.0000i  33.0000 +15.0000i
  30.0000 +12.0000i   5.0000 +14.0000i  34.0000 +16.0000i
   4.0000 +13.0000i  36.0000 +18.0000i  29.0000 +11.0000i


ans =

{U_ArrayType_SUdoubleU_ArraySize_[$U#U<2><6><3>U_ArrayIsComplex_TU_ArrayData_[$i#[$U#U<2><2><18><35><26><1><19><6><24><3><21><32><23><7><25><31><22><9><27><2><20><8><17><28><10><33><15><30><12><5><14><34><16><4><13><36><18><29><11>}


%=================================================
%  MATLAB special constants
%=================================================


data2json =

   NaN   Inf  -Inf


ans =

{Uspecials[$D#U<3><NaN><Inf><-Inf>}


%=================================================
%  a real sparse matrix
%=================================================


data2json =

   (1,2)       0.6557
   (9,2)       0.7577
   (3,5)       0.8491
  (10,5)       0.7431
  (10,8)       0.3922
   (7,9)       0.6787
   (2,10)      0.0357
   (6,10)      0.9340
  (10,10)      0.6555


ans =

{Usparse{U_ArrayType_SUdoubleU_ArraySize_[$U#U<2><10><10>U_ArrayIsSparse_TU_ArrayData_[[$i#U<9><1><9><3><10><10><7><2><6><10>[$i#U<9><2><2><5><5><8><9><10><10><10>[$D#U<9><0.655741><0.75774><0.849129><0.743132><0.392227><0.678735><0.0357117><0.933993><0.655478>]}}


%=================================================
%  a complex sparse matrix
%=================================================


data2json =

   (1,2)      0.6557 - 0.6557i
   (9,2)      0.7577 - 0.7577i
   (3,5)      0.8491 - 0.8491i
  (10,5)      0.7431 - 0.7431i
  (10,8)      0.3922 - 0.3922i
   (7,9)      0.6787 - 0.6787i
   (2,10)     0.0357 - 0.0357i
   (6,10)     0.9340 - 0.9340i
  (10,10)     0.6555 - 0.6555i


ans =

{Ucomplex_sparse{U_ArrayType_SUdoubleU_ArraySize_[$U#U<2><10><10>U_ArrayIsComplex_TU_ArrayIsSparse_TU_ArrayData_[[$i#U<9><1><9><3><10><10><7><2><6><10>[$i#U<9><2><2><5><5><8><9><10><10><10>[$D#U<9><0.655741><0.75774><0.849129><0.743132><0.392227><0.678735><0.0357117><0.933993><0.655478>[$D#U<9><-0.655741><-0.75774><-0.849129><-0.743132><-0.392227><-0.678735><-0.0357117><-0.933993><-0.655478>]}}


%=================================================
%  an all-zero sparse matrix
%=================================================


ans =

{Uall_zero_sparse{U_ArrayType_SUdoubleU_ArraySize_[$U#U<2><2><3>U_ArrayIsSparse_TU_ArrayData_[ZZZ]}}


%=================================================
%  an empty sparse matrix
%=================================================


ans =

{Uempty_sparseZ}


json2data = 

    empty_sparse: []


%=================================================
%  an empty 0-by-0 real matrix
%=================================================


ans =

{Uempty_0by0_realZ}


json2data = 

    empty_0by0_real: []


%=================================================
%  an empty 0-by-3 real matrix
%=================================================


ans =

{Uempty_0by3_realZ}


json2data = 

    empty_0by3_real: []


%=================================================
%  a sparse real column vector
%=================================================


ans =

{Usparse_column_vector{U_ArrayType_SUdoubleU_ArraySize_[$U#U<2><5><1>U_ArrayIsSparse_TU_ArrayData_[[$i#U<3><2><4><5>[$i#U<3><3><1><4>]}}


%=================================================
%  a sparse complex column vector
%=================================================


ans =

{Ucomplex_sparse_column_vector{U_ArrayType_SUdoubleU_ArraySize_[$U#U<2><5><1>U_ArrayIsComplex_TU_ArrayIsSparse_TU_ArrayData_[[$i#U<3><2><4><5>[$i#U<3><3><1><4>[$i#U<3><-3><-1><-4>]}}


%=================================================
%  a sparse real row vector
%=================================================


ans =

{Usparse_row_vector{U_ArrayType_SUdoubleU_ArraySize_[$U#U<2><1><5>U_ArrayIsSparse_TU_ArrayData_[[$i#U<3><2><4><5>[$i#U<3><3><1><4>]}}


%=================================================
%  a sparse complex row vector
%=================================================


ans =

{Ucomplex_sparse_row_vector{U_ArrayType_SUdoubleU_ArraySize_[$U#U<2><1><5>U_ArrayIsComplex_TU_ArrayIsSparse_TU_ArrayData_[[$i#U<3><2><4><5>[$i#U<3><3><1><4>[$i#U<3><-3><-1><-4>]}}


%=================================================
%  a structure
%=================================================


data2json = 

        name: 'Think Different'
        year: 1997
       magic: [3x3 double]
     misfits: [Inf NaN]
    embedded: [1x1 struct]


ans =

{Uastruct{UnameSUThink DifferentUyearI<1997>Umagic[$i#[$U#U<2><3><3><8><3><4><1><5><9><6><7><2>Umisfits[$D#U<2><Inf><NaN>Uembedded{UleftTUrightF}}}


%=================================================
%  a structure array
%=================================================


ans =

{USupreme Commander[{UnameSUNexus PrimeUranki<9>}{UnameSUSentinel PrimeUranki<9>}{UnameSUOptimus PrimeUranki<9>}]}


%=================================================
%  a cell array
%=================================================


data2json = 

    [1x1 struct]
    [1x1 struct]
    [1x4 double]


ans =

{Udebian[[{UbuzzD<1.1>UrexD<1.2>UboD<1.3>Uhammi<2>UslinkD<2.1>UpotatoD<2.2>Uwoodyi<3>UsargeD<3.1>Uetchi<4>Ulennyi<5>Usqueezei<6>Uwheezyi<7>}{UUbuntu[SUKubuntuSUXubuntuSULubuntu]}[$D#U<4><10.04><10.1><11.04><11.1>]]}


%=================================================
%  invalid field-name handling
%=================================================


json2data = 

               ValidName: 1
       x0x5F_InvalidName: 2
       x0x3A_Field_0x3A_: 3
    x0xEFBFBD__0xEFBFBD_: 'ÁªùÂØÜ'


%=================================================
%  a function handle
%=================================================


data2json = 

    @(x)x+1


ans =

{Uhandle{UfunctionSU@(x)x+1UtypeSU	anonymousUfileSU U	workspace[{}]Uwithin_file_pathSU__base_function}}


json2data = 

    handle: [1x1 struct]


%=================================================
%  a 2D cell array
%=================================================


ans =

{U	data2json[[[[i<1>][[i<2>][i<3>]]][[i<4>][i<5>]][[i<6>]]][[[i<7>]][[i<8>][i<9>]][[i<10>]]]]}


%=================================================
%  a 2D struct array
%=================================================


data2json = 

2x3 struct array with fields:

    idx
    data


ans =

{U	data2json[[{Uidxi<1>UdataSUstructs}{Uidxi<2>UdataSUstructs}][{Uidxi<3>UdataSUstructs}{Uidxi<4>UdataSUstructs}][{Uidxi<5>UdataSUstructs}{Uidxi<6>UdataSUstructs}]]}


%=================================================
%  datetime object 
%=================================================


data2json = 

   08-Apr-2015   09-May-2015


ans =

[{UFormatSUdd-MMM-uuuuUTimeZoneSU UYearI<2015>UMonthi<4>UDayi<8>UHouri<0>UMinutei<0>USecondi<0>USystemTimeZoneSUAmerica/New_York}{UFormatSUdd-MMM-uuuuUTimeZoneSU UYearI<2015>UMonthi<5>UDayi<9>UHouri<0>UMinutei<0>USecondi<0>USystemTimeZoneSUAmerica/New_York}]


%=================================================
%  a container.Maps object 
%=================================================


data2json = 

  Map with properties:

        Count: 3
      KeyType: char
    ValueType: double


ans =

{UAndyi<21>UOmi<22>UWilliami<21>}


%=================================================
%  a table object 
%=================================================


data2json = 

      Names      Age
    _________    ___

    'Andy'       21 
    'William'    21 
    'Om'         22 


ans =

{Utable[{UNames[SUAndy]UAgei<21>}{UNames[SUWilliam]UAgei<21>}{UNames[SUOm]UAgei<22>}]}

